$date
	Mon Oct 14 21:14:28 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 1 ! y_xor $end
$var wire 1 " y_or $end
$var wire 1 # y_not $end
$var wire 1 $ y_nand $end
$var wire 1 % y_and $end
$var reg 1 & a $end
$var reg 1 ' b $end
$scope module and1 $end
$var wire 1 & a $end
$var wire 1 ' b $end
$var wire 1 % y $end
$scope module and_gate $end
$var wire 1 ( a $end
$var wire 1 ' b $end
$var wire 1 & sel $end
$var wire 1 % y $end
$upscope $end
$upscope $end
$scope module nand1 $end
$var wire 1 & a $end
$var wire 1 ' b $end
$var wire 1 $ y $end
$var wire 1 ) b_inv $end
$scope module nand_gate $end
$var wire 1 * a $end
$var wire 1 & sel $end
$var wire 1 $ y $end
$var wire 1 ) b $end
$upscope $end
$scope module not1 $end
$var wire 1 ' a $end
$var wire 1 ) y $end
$scope module not_gate $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 ' sel $end
$var wire 1 ) y $end
$upscope $end
$upscope $end
$upscope $end
$scope module not1 $end
$var wire 1 & a $end
$var wire 1 # y $end
$scope module not_gate $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 & sel $end
$var wire 1 # y $end
$upscope $end
$upscope $end
$scope module or1 $end
$var wire 1 & a $end
$var wire 1 ' b $end
$var wire 1 " y $end
$scope module or_gate $end
$var wire 1 ' a $end
$var wire 1 / b $end
$var wire 1 & sel $end
$var wire 1 " y $end
$upscope $end
$upscope $end
$scope module xor1 $end
$var wire 1 & a $end
$var wire 1 ' b $end
$var wire 1 ! y $end
$var wire 1 0 b_inv $end
$scope module not1 $end
$var wire 1 ' a $end
$var wire 1 0 y $end
$scope module not_gate $end
$var wire 1 1 a $end
$var wire 1 2 b $end
$var wire 1 ' sel $end
$var wire 1 0 y $end
$upscope $end
$upscope $end
$scope module xor_gate $end
$var wire 1 ' a $end
$var wire 1 0 b $end
$var wire 1 & sel $end
$var wire 1 ! y $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
02
11
10
1/
0.
1-
0,
1+
1*
1)
0(
0'
0&
0%
1$
1#
0"
0!
$end
#10
0)
1"
00
1!
1'
#20
1)
10
1$
0#
1!
0'
1&
#30
0$
0!
1%
0)
00
1'
#40
